## getting help for python methods
help(mylist.insert)


## Print TRUE if there is any even number in a given list
def check_even_in_list(num_list):
    for number in num_list:
        if number % 2 == 0:
            return True
        else:
            pass
    return False

check_even_in_list([1,5,3])


## Print ALL even numbers in a given list
def check_even_in_list(num_list):

    # placeholder variable
    even_numbers=[]

    for number in num_list:
        if number % 2 == 0:
            even_numbers.append(number)
        else:
            pass
    return even_numbers

check_even_in_list([1,2,3])


## Shuffle a list
from random import shuffle

examplelist = [1,2,3,4,5,6,7]

def shuffle_list(mylist):
    shuffle(mylist)
    return mylist

result = shuffle_list(examplelist)
result


## game where the player guess where is the 'ball'
from random import shuffle

mylist = [' ','O',' ']

def shuffle_list(mylist):
    shuffle(mylist)
    return mylist

result = shuffle_list(mylist)
print(result)

def player_guess():
    guess=''
    while guess not in ['0','1','2']:
        guess = input ("Pick a number between: 0,1,2 ")
    return int(guess)

player_guess()

def check_guess(mylist,guess):
    if mylist[guess]=='0':
        print("Correct!")
    else:
        print("Wrong!")
        print(mylist)

# Shuffle list
mixedup_list = shuffle_list(mylist)

# User guess 
guess = player_guess()

# Check guess
check_guess(mixedup_list,guess)



## *args allows for an arbitrary number of arguments, and the function takes them in as a tuple of values. 

# before

def myfunc(a=0,b=0,c=0,d=0,e=0):
    return sum((a,b,c,d,e))*.05

myfunc(40,60,20)

# after

def myfunc(*args):
    return sum(args)*.05

myfunc(40,60,20)

# "args" is itself arbitrary - any word will do so long as it's preceded by an asterisk.

def myfunc(*spam):
    return sum(spam)*.05

myfunc(40,60,20)


## **kwargs - a way to handle arbitrary numbers of keyworded arguments. Instead of creating a tuple of values, **kwargs builds a dictionary of key/value pairs. 

def myfunc(**kwargs):
    if 'fruit' in kwargs:
        print("My favorite fruit is {}".format(kwargs['fruit']))
    else:
        print("I don't like fruit")
        
myfunc(fruit='pineapple')


## Exercise - return evens

def myfunc(*args):
    out=[]
    for num in args:
        if num%2==0:
            out.append(num)
    return out

myfunc(1,2,3,4,5)


## Exercise - takes in a string, and returns a matching string where every even letter is uppercase, and every odd letter is lowercase. 

def myfunc(x):
    out=[]
    for i in range(len(x)):
        if i%2==0:
            out.append(x[i].lower())
        else:
            out.append(x[i].upper())
    return ''.join(out)

myfunc("test")


## Exercise - Write a function takes a two-word string and returns True if both words begin with same letter

def animal_crackers(text):
    wordlist = text.split()
    print(wordlist)

    first = wordlist[0]
    second = wordlist[1]

    return first[0]==second[0]

animal_crackers('Levelheaded Llama')
